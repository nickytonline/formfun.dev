---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import { formElementSelectors } from "../utils/formElementSelectors.ts";
---

<Layout
  currentPath="/form-pseudo-classes"
  title="Examples"
  description="References for modern CSS usage for HTML forms."
>
  <Header title="References" />
  <main id="main">
    <p>
      Here are some CSS <a
        href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes"
        >pseudo-classes</a
      > for modern CSS usage for HTML forms.
    </p>
    <ul class="m-6
         list-disc grid gap-2">
      {
        formElementSelectors.map(({ url, title, notes }) => {
          return (
            <li>
              <span class="grid gap-2 w-fit">
                <a href={url}>{title}</a>
                {notes ? <p>{notes}</p> : null}
              </span>
            </li>
          );
        })
      }
    </ul>
    <p>
      Combining the <a
        href="https://developer.mozilla.org/en-US/docs/Web/CSS/:has">:has</a
      >
      pseudo-class with these pseudo-classes can be very powerful. Check out Josh
      Comeau's article,
      <a href="https://www.joshwcomeau.com/css/has"
        >The Undeniable Utility Of CSS :has</a
      > for a great deep dive into :has. Also, worth checking out is this blog post
      from Adam Argyle, <a href="https://nerdy.dev/interpolate-size"
        >CSS interpolate-size to the rescue</a
      >, demoing a login with :has and :user-valid.
    </p>
  </main>
</Layout>
